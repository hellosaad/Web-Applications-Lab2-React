{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"./contexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const {\n    dispatch\n  } = useContext(StateContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n\n  // Define useResource hook for registration\n  const [userRegisterResponse, register] = useResource((email, password) => ({\n    url: '/users',\n    // Your backend endpoint for user registration\n    method: 'post',\n    data: {\n      email,\n      password\n    }\n  }));\n  function handleEmail(evt) {\n    setEmail(evt.target.value);\n  }\n  function handlePassword(evt) {\n    setPassword(evt.target.value);\n  }\n  function handlePasswordRepeat(evt) {\n    setPasswordRepeat(evt.target.value);\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    if (password === passwordRepeat) {\n      register(email, password);\n    } else {\n      alert(\"Passwords do not match\");\n    }\n  }\n\n  // Handle register response\n  useEffect(() => {\n    if (userRegisterResponse.data) {\n      // Assuming the backend returns the new user's email to confirm registration\n      dispatch({\n        type: \"REGISTER\",\n        username: userRegisterResponse.data.email\n      });\n    }\n    // Here you could handle errors, for example, if the response contains an error message\n  }, [userRegisterResponse, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"register-email\",\n      id: \"register-email\",\n      value: email,\n      onChange: handleEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"register-password\",\n      id: \"register-password\",\n      value: password,\n      onChange: handlePassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password-repeat\",\n      children: \"Repeat password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"register-password-repeat\",\n      id: \"register-password-repeat\",\n      value: passwordRepeat,\n      onChange: handlePasswordRepeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      disabled: !email || !password || password !== passwordRepeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"ugF6Szcs95M7S+cTcQn2b8przOQ=\", false, function () {\n  return [useResource];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useResource","StateContext","jsxDEV","_jsxDEV","Register","_s","dispatch","email","setEmail","password","setPassword","passwordRepeat","setPasswordRepeat","userRegisterResponse","register","url","method","data","handleEmail","evt","target","value","handlePassword","handlePasswordRepeat","handleSubmit","preventDefault","alert","type","username","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/Register.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"./contexts\";\n\nexport default function Register() {\n  const { dispatch } = useContext(StateContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n\n  // Define useResource hook for registration\n  const [userRegisterResponse, register] = useResource((email, password) => ({\n    url: '/users', // Your backend endpoint for user registration\n    method: 'post',\n    data: { email, password }\n  }));\n\n  function handleEmail(evt) {\n    setEmail(evt.target.value);\n  }\n\n  function handlePassword(evt) {\n    setPassword(evt.target.value);\n  }\n\n  function handlePasswordRepeat(evt) {\n    setPasswordRepeat(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    if (password === passwordRepeat) {\n      register(email, password);\n    } else {\n      alert(\"Passwords do not match\");\n    }\n  }\n\n  // Handle register response\n  useEffect(() => {\n    if (userRegisterResponse.data) {\n      // Assuming the backend returns the new user's email to confirm registration\n      dispatch({ type: \"REGISTER\", username: userRegisterResponse.data.email });\n    }\n    // Here you could handle errors, for example, if the response contains an error message\n  }, [userRegisterResponse, dispatch]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"register-email\">Email:</label>\n      <input\n        type=\"text\"\n        name=\"register-email\"\n        id=\"register-email\"\n        value={email}\n        onChange={handleEmail}\n      />\n\n      <label htmlFor=\"register-password\">Password:</label>\n      <input\n        type=\"password\"\n        name=\"register-password\"\n        id=\"register-password\"\n        value={password}\n        onChange={handlePassword}\n      />\n\n      <label htmlFor=\"register-password-repeat\">Repeat password:</label>\n      <input\n        type=\"password\"\n        name=\"register-password-repeat\"\n        id=\"register-password-repeat\"\n        value={passwordRepeat}\n        onChange={handlePasswordRepeat}\n      />\n\n      <input\n        type=\"submit\"\n        value=\"Register\"\n        disabled={\n          !email ||\n          !password ||\n          password !== passwordRepeat\n        }\n      />\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}