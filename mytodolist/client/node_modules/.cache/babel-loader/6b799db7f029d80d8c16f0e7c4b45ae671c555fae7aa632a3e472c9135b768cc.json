{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodo({\n  user,\n  dispatch\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [todo, createTodo] = useResource(({\n    title,\n    description,\n    author\n  }) => ({\n    url: \"/todos\",\n    method: \"post\",\n    data: {\n      title,\n      description,\n      author\n    }\n  }));\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n  function handleCreate() {\n    if (title && user) {\n      createTodo({\n        title,\n        description,\n        author: user\n      });\n      // You may want to dispatch only after ensuring the POST was successful.\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      if (!title.trim()) {\n        alert(\"Title can not be empty!\");\n        return;\n      }\n      handleCreate();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"create-title\",\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"create-title\",\n        id: \"create-title\",\n        value: title,\n        onChange: handleTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: handleDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTodo, \"8M+uJT7TPXN2AlnH/OOhRhSnMTo=\", false, function () {\n  return [useResource];\n});\n_c = CreateTodo;\nvar _c;\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"names":["useState","useResource","jsxDEV","_jsxDEV","CreateTodo","user","dispatch","_s","title","setTitle","description","setDescription","todo","createTodo","author","url","method","data","handleTitle","evt","target","value","handleDescription","handleCreate","onSubmit","e","preventDefault","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","onChange","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\n\nexport default function CreateTodo({ user, dispatch }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const [todo, createTodo] = useResource(({ title, description, author }) => ({\n    url: \"/todos\",\n    method: \"post\",\n    data: { title, description, author },\n  }));\n\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleCreate() {\n    if (title && user) {\n      createTodo({ title, description, author: user });\n      // You may want to dispatch only after ensuring the POST was successful.\n    }\n  }\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (!title.trim()) {\n          alert(\"Title can not be empty!\");\n          return;\n        }\n        handleCreate();\n      }}\n    >\n      <div>\n        Author: <b>{user}</b>\n      </div>\n      <div>\n        <label htmlFor=\"create-title\">Title: </label>\n        <input\n          type=\"text\"\n          name=\"create-title\"\n          id=\"create-title\"\n          value={title}\n          onChange={handleTitle}\n        />\n      </div>\n      <label>Description: </label>\n      <textarea value={description} onChange={handleDescription} />\n      <input type=\"submit\" value=\"Create\" />\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}