{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect } from \"react\";\nimport { StateContext } from \"./contexts\"; // Add this import\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\"\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      // Transform the posts to match the expected format of todos\n      const transformedTodos = postsResult.data.map(post => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete\n      }));\n      todosDispatch({\n        type: \"FETCH_TODOS\",\n        todos: transformedTodos\n      });\n    }\n  }, [postsResult]);\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      user,\n      userDispatch,\n      todos,\n      todosDispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DJ8jsxztWEOJdXT42kZyQE/k10g=\", false, function () {\n  return [useResource];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","useEffect","StateContext","useResource","CreateTodo","UserBar","TodoList","userReducer","todoReducer","jsxDEV","_jsxDEV","App","_s","user","userDispatch","todos","todosDispatch","postsResult","getPosts","url","method","data","transformedTodos","map","post","id","title","description","dateCreated","Date","now","dateCompleted","author","complete","type","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport { StateContext } from \"./contexts\"; // Add this import\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\n\nfunction App() {\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\",\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      // Transform the posts to match the expected format of todos\n      const transformedTodos = postsResult.data.map((post) => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete,\n      }));\n      todosDispatch({ type: \"FETCH_TODOS\", todos: transformedTodos });\n    }\n  }, [postsResult]);\n\n  return (\n    <StateContext.Provider value={{ user, userDispatch, todos, todosDispatch }}>\n      <div className=\"App\">\n        <UserBar />\n        <CreateTodo />\n        <TodoList />\n      </div>\n    </StateContext.Provider>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,YAAY,QAAQ,YAAY,CAAC,CAAC;AAC3C,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGd,UAAU,CAACO,WAAW,EAAE,EAAE,CAAC;EACxD,MAAM,CAACQ,KAAK,EAAEC,aAAa,CAAC,GAAGhB,UAAU,CAACQ,WAAW,EAAE,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACS,WAAW,EAAEC,QAAQ,CAAC,GAAGf,WAAW,CAAC,OAAO;IACjDgB,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;;EAEH;EACAnB,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIgB,WAAW,IAAIA,WAAW,CAACI,IAAI,EAAE;MACnC;MACA,MAAMC,gBAAgB,GAAGL,WAAW,CAACI,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QACvDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,WAAW,EAAEH,IAAI,CAACG,WAAW;QAC7BC,WAAW,EAAEJ,IAAI,CAACI,WAAW,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC3CC,aAAa,EAAEP,IAAI,CAACO,aAAa;QACjCC,MAAM,EAAER,IAAI,CAACQ,MAAM;QACnBC,QAAQ,EAAET,IAAI,CAACS;MACjB,CAAC,CAAC,CAAC;MACHjB,aAAa,CAAC;QAAEkB,IAAI,EAAE,aAAa;QAAEnB,KAAK,EAAEO;MAAiB,CAAC,CAAC;IACjE;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACEP,OAAA,CAACR,YAAY,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEC,YAAY;MAAEC,KAAK;MAAEC;IAAc,CAAE;IAAAqB,QAAA,eACzE3B,OAAA;MAAK4B,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClB3B,OAAA,CAACL,OAAO;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXhC,OAAA,CAACN,UAAU;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdhC,OAAA,CAACJ,QAAQ;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B;AAAC9B,EAAA,CAzCQD,GAAG;EAAA,QAKsBR,WAAW;AAAA;AAAAwC,EAAA,GALpChC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}