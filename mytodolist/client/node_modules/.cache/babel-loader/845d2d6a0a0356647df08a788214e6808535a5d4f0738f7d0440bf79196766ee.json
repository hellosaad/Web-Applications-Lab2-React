{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodo({\n  user,\n  dispatch\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // useResource hook to make a POST request to persist a Todo\n  const [todoResponse, createTodo] = useResource(({\n    title,\n    description,\n    author\n  }) => ({\n    url: \"/posts\",\n    // Assuming '/posts' is the endpoint for todos as per your db.json structure\n    method: \"post\",\n    data: {\n      title,\n      description,\n      author,\n      dateCreated: Date.now(),\n      complete: false\n    }\n  }));\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n  function handleCreate() {\n    // Make sure a user is present before creating a todo\n    if (user && title.trim()) {\n      createTodo({\n        title,\n        description,\n        author: user\n      }).then(response => {\n        // Check if the POST request was successful and a response was returned\n        if (response && response.data) {\n          // Dispatch an action to add the new todo to the local state\n          dispatch({\n            type: \"CREATE_TODO\",\n            newTodo: response.data\n          });\n          // Clear the form fields\n          setTitle(\"\");\n          setDescription(\"\");\n        }\n      });\n    } else {\n      alert(\"Please enter a title for the todo and make sure you are logged in.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleCreate();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"create-title\",\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"create-title\",\n        id: \"create-title\",\n        value: title,\n        onChange: handleTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"create-description\",\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"create-description\",\n        id: \"create-description\",\n        value: description,\n        onChange: handleDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTodo, \"m3pTGmGBACusdMYbxxLC46R/19s=\", false, function () {\n  return [useResource];\n});\n_c = CreateTodo;\nvar _c;\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"names":["useState","useResource","jsxDEV","_jsxDEV","CreateTodo","user","dispatch","_s","title","setTitle","description","setDescription","todoResponse","createTodo","author","url","method","data","dateCreated","Date","now","complete","handleTitle","evt","target","value","handleDescription","handleCreate","trim","then","response","type","newTodo","alert","onSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","id","onChange","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\n\nexport default function CreateTodo({ user, dispatch }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // useResource hook to make a POST request to persist a Todo\n  const [todoResponse, createTodo] = useResource(\n    ({ title, description, author }) => ({\n      url: \"/posts\", // Assuming '/posts' is the endpoint for todos as per your db.json structure\n      method: \"post\",\n      data: {\n        title,\n        description,\n        author,\n        dateCreated: Date.now(),\n        complete: false,\n      },\n    })\n  );\n\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleCreate() {\n    // Make sure a user is present before creating a todo\n    if (user && title.trim()) {\n      createTodo({ title, description, author: user }).then((response) => {\n        // Check if the POST request was successful and a response was returned\n        if (response && response.data) {\n          // Dispatch an action to add the new todo to the local state\n          dispatch({ type: \"CREATE_TODO\", newTodo: response.data });\n          // Clear the form fields\n          setTitle(\"\");\n          setDescription(\"\");\n        }\n      });\n    } else {\n      alert(\n        \"Please enter a title for the todo and make sure you are logged in.\"\n      );\n    }\n  }\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleCreate();\n      }}\n    >\n      <div>\n        Author: <b>{user}</b>\n      </div>\n      <div>\n        <label htmlFor=\"create-title\">Title: </label>\n        <input\n          type=\"text\"\n          name=\"create-title\"\n          id=\"create-title\"\n          value={title}\n          onChange={handleTitle}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"create-description\">Description: </label>\n        <textarea\n          name=\"create-description\"\n          id=\"create-description\"\n          value={description}\n          onChange={handleDescription}\n        />\n      </div>\n      <input type=\"submit\" value=\"Create\" />\n    </form>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACY,YAAY,EAAEC,UAAU,CAAC,GAAGZ,WAAW,CAC5C,CAAC;IAAEO,KAAK;IAAEE,WAAW;IAAEI;EAAO,CAAC,MAAM;IACnCC,GAAG,EAAE,QAAQ;IAAE;IACfC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;MACJT,KAAK;MACLE,WAAW;MACXI,MAAM;MACNI,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACvBC,QAAQ,EAAE;IACZ;EACF,CAAC,CACH,CAAC;EAED,SAASC,WAAWA,CAACC,GAAG,EAAE;IACxBd,QAAQ,CAACc,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B;EAEA,SAASC,iBAAiBA,CAACH,GAAG,EAAE;IAC9BZ,cAAc,CAACY,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC;EAEA,SAASE,YAAYA,CAAA,EAAG;IACtB;IACA,IAAItB,IAAI,IAAIG,KAAK,CAACoB,IAAI,CAAC,CAAC,EAAE;MACxBf,UAAU,CAAC;QAAEL,KAAK;QAAEE,WAAW;QAAEI,MAAM,EAAET;MAAK,CAAC,CAAC,CAACwB,IAAI,CAAEC,QAAQ,IAAK;QAClE;QACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACb,IAAI,EAAE;UAC7B;UACAX,QAAQ,CAAC;YAAEyB,IAAI,EAAE,aAAa;YAAEC,OAAO,EAAEF,QAAQ,CAACb;UAAK,CAAC,CAAC;UACzD;UACAR,QAAQ,CAAC,EAAE,CAAC;UACZE,cAAc,CAAC,EAAE,CAAC;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLsB,KAAK,CACH,oEACF,CAAC;IACH;EACF;EAEA,oBACE9B,OAAA;IACE+B,QAAQ,EAAGC,CAAC,IAAK;MACfA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBT,YAAY,CAAC,CAAC;IAChB,CAAE;IAAAU,QAAA,gBAEFlC,OAAA;MAAAkC,QAAA,GAAK,UACK,eAAAlC,OAAA;QAAAkC,QAAA,EAAIhC;MAAI;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAOuC,OAAO,EAAC,cAAc;QAAAL,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CtC,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXY,IAAI,EAAC,cAAc;QACnBC,EAAE,EAAC,cAAc;QACjBnB,KAAK,EAAEjB,KAAM;QACbqC,QAAQ,EAAEvB;MAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAOuC,OAAO,EAAC,oBAAoB;QAAAL,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDtC,OAAA;QACEwC,IAAI,EAAC,oBAAoB;QACzBC,EAAE,EAAC,oBAAoB;QACvBnB,KAAK,EAAEf,WAAY;QACnBmC,QAAQ,EAAEnB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtC,OAAA;MAAO4B,IAAI,EAAC,QAAQ;MAACN,KAAK,EAAC;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEX;AAAClC,EAAA,CA/EuBH,UAAU;EAAA,QAKGH,WAAW;AAAA;AAAA6C,EAAA,GALxB1C,UAAU;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}