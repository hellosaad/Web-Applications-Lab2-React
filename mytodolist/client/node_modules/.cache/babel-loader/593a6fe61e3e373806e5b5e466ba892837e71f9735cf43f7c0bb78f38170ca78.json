{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\"\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      // Transform the posts to match the expected format of todos\n      const transformedTodos = postsResult.data.map(post => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete\n      }));\n      todosDispatch({\n        type: \"FETCH_TODOS\",\n        todos: transformedTodos\n      });\n    }\n  }, [postsResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UserBar, {\n      user: user,\n      dispatch: userDispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodo, {\n      user: user,\n      dispatch: todosDispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      dispatch: todosDispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DJ8jsxztWEOJdXT42kZyQE/k10g=\", false, function () {\n  return [useResource];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","useEffect","useResource","CreateTodo","UserBar","TodoList","userReducer","todoReducer","jsxDEV","_jsxDEV","App","_s","user","userDispatch","todos","todosDispatch","postsResult","getPosts","url","method","data","transformedTodos","map","post","id","title","description","dateCreated","Date","now","dateCompleted","author","complete","type","className","children","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\n\nfunction App() {\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\",\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      // Transform the posts to match the expected format of todos\n      const transformedTodos = postsResult.data.map((post) => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete,\n      }));\n      todosDispatch({ type: \"FETCH_TODOS\", todos: transformedTodos });\n    }\n  }, [postsResult]);\n\n  return (\n    <div className=\"App\">\n      <UserBar user={user} dispatch={userDispatch} />\n      <CreateTodo user={user} dispatch={todosDispatch} />\n      <TodoList todos={todos} dispatch={todosDispatch} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGb,UAAU,CAACM,WAAW,EAAE,EAAE,CAAC;EACxD,MAAM,CAACQ,KAAK,EAAEC,aAAa,CAAC,GAAGf,UAAU,CAACO,WAAW,EAAE,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACS,WAAW,EAAEC,QAAQ,CAAC,GAAGf,WAAW,CAAC,OAAO;IACjDgB,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;;EAEH;EACAlB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,IAAIA,WAAW,CAACI,IAAI,EAAE;MACnC;MACA,MAAMC,gBAAgB,GAAGL,WAAW,CAACI,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QACvDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,WAAW,EAAEH,IAAI,CAACG,WAAW;QAC7BC,WAAW,EAAEJ,IAAI,CAACI,WAAW,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC3CC,aAAa,EAAEP,IAAI,CAACO,aAAa;QACjCC,MAAM,EAAER,IAAI,CAACQ,MAAM;QACnBC,QAAQ,EAAET,IAAI,CAACS;MACjB,CAAC,CAAC,CAAC;MACHjB,aAAa,CAAC;QAAEkB,IAAI,EAAE,aAAa;QAAEnB,KAAK,EAAEO;MAAiB,CAAC,CAAC;IACjE;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACEP,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA,CAACL,OAAO;MAACQ,IAAI,EAAEA,IAAK;MAACwB,QAAQ,EAAEvB;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C/B,OAAA,CAACN,UAAU;MAACS,IAAI,EAAEA,IAAK;MAACwB,QAAQ,EAAErB;IAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD/B,OAAA,CAACJ,QAAQ;MAACS,KAAK,EAAEA,KAAM;MAACsB,QAAQ,EAAErB;IAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAAC7B,EAAA,CAvCQD,GAAG;EAAA,QAKsBR,WAAW;AAAA;AAAAuC,EAAA,GALpC/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}