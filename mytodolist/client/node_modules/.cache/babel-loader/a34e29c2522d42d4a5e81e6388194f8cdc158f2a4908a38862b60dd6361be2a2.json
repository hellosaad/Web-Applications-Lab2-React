{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport Register from \"./Register\";\nimport Login from \"./Login\"; // Assuming you have a Login component\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\"\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      const transformedTodos = postsResult.data.map(post => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete\n      }));\n      todosDispatch({\n        type: \"FETCH_TODOS\",\n        todos: transformedTodos\n      });\n    }\n  }, [postsResult]);\n\n  // Check if user is logged in\n  useEffect(() => {\n    setIsLoggedIn(!!user);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UserBar, {\n      user: user,\n      dispatch: userDispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTodo, {\n        user: user,\n        dispatch: todosDispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        dispatch: todosDispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        dispatch: userDispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Register, {\n        dispatch: userDispatch,\n        setIsLoggedIn: setIsLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eSqWWDcMV0sBzQun5rC+VeJwQaU=\", false, function () {\n  return [useResource];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useEffect","useState","useResource","CreateTodo","UserBar","TodoList","Register","Login","userReducer","todoReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","userDispatch","todos","todosDispatch","isLoggedIn","setIsLoggedIn","postsResult","getPosts","url","method","data","transformedTodos","map","post","id","title","description","dateCreated","Date","now","dateCompleted","author","complete","type","className","children","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/App.js"],"sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport CreateTodo from \"./CreateTodo\";\nimport UserBar from \"./UserBar\";\nimport TodoList from \"./TodoList\";\nimport Register from \"./Register\";\nimport Login from \"./Login\"; // Assuming you have a Login component\nimport { userReducer, todoReducer } from \"./reducers\";\nimport \"./App.css\";\n\nfunction App() {\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [todos, todosDispatch] = useReducer(todoReducer, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Define the useResource Hook for GET /posts\n  const [postsResult, getPosts] = useResource(() => ({\n    url: \"/posts\",\n    method: \"get\",\n  }));\n\n  // Fetch posts when the component mounts\n  useEffect(() => {\n    getPosts();\n  }, []); // Empty array ensures this only runs once on mount\n\n  // Dispatch an action when the posts are successfully fetched\n  useEffect(() => {\n    if (postsResult && postsResult.data) {\n      const transformedTodos = postsResult.data.map((post) => ({\n        id: post.id,\n        title: post.title,\n        description: post.description,\n        dateCreated: post.dateCreated || Date.now(),\n        dateCompleted: post.dateCompleted,\n        author: post.author,\n        complete: post.complete,\n      }));\n      todosDispatch({ type: \"FETCH_TODOS\", todos: transformedTodos });\n    }\n  }, [postsResult]);\n\n  // Check if user is logged in\n  useEffect(() => {\n    setIsLoggedIn(!!user);\n  }, [user]);\n\n  return (\n    <div className=\"App\">\n      <UserBar user={user} dispatch={userDispatch} />\n      {isLoggedIn ? (\n        <>\n          <CreateTodo user={user} dispatch={todosDispatch} />\n          <TodoList todos={todos} dispatch={todosDispatch} />\n        </>\n      ) : (\n        <>\n          <Login dispatch={userDispatch} />\n          <Register dispatch={userDispatch} setIsLoggedIn={setIsLoggedIn} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,YAAY,CAAC,GAAGlB,UAAU,CAACS,WAAW,EAAE,EAAE,CAAC;EACxD,MAAM,CAACU,KAAK,EAAEC,aAAa,CAAC,GAAGpB,UAAU,CAACU,WAAW,EAAE,EAAE,CAAC;EAC1D,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAM,CAACqB,WAAW,EAAEC,QAAQ,CAAC,GAAGrB,WAAW,CAAC,OAAO;IACjDsB,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;;EAEH;EACAzB,SAAS,CAAC,MAAM;IACduB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAvB,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,IAAIA,WAAW,CAACI,IAAI,EAAE;MACnC,MAAMC,gBAAgB,GAAGL,WAAW,CAACI,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QACvDC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,WAAW,EAAEH,IAAI,CAACG,WAAW;QAC7BC,WAAW,EAAEJ,IAAI,CAACI,WAAW,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC3CC,aAAa,EAAEP,IAAI,CAACO,aAAa;QACjCC,MAAM,EAAER,IAAI,CAACQ,MAAM;QACnBC,QAAQ,EAAET,IAAI,CAACS;MACjB,CAAC,CAAC,CAAC;MACHnB,aAAa,CAAC;QAAEoB,IAAI,EAAE,aAAa;QAAErB,KAAK,EAAES;MAAiB,CAAC,CAAC;IACjE;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;;EAEjB;EACAtB,SAAS,CAAC,MAAM;IACdqB,aAAa,CAAC,CAAC,CAACL,IAAI,CAAC;EACvB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA,CAACP,OAAO;MAACY,IAAI,EAAEA,IAAK;MAAC0B,QAAQ,EAAEzB;IAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9C1B,UAAU,gBACTT,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBACE9B,OAAA,CAACR,UAAU;QAACa,IAAI,EAAEA,IAAK;QAAC0B,QAAQ,EAAEvB;MAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDnC,OAAA,CAACN,QAAQ;QAACa,KAAK,EAAEA,KAAM;QAACwB,QAAQ,EAAEvB;MAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACnD,CAAC,gBAEHnC,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBACE9B,OAAA,CAACJ,KAAK;QAACmC,QAAQ,EAAEzB;MAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCnC,OAAA,CAACL,QAAQ;QAACoC,QAAQ,EAAEzB,YAAa;QAACI,aAAa,EAAEA;MAAc;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAClE,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CArDQD,GAAG;EAAA,QAMsBZ,WAAW;AAAA;AAAA6C,EAAA,GANpCjC,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}