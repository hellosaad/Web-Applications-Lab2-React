{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2-React/mytodolist/client/src/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"./contexts\";\nimport { useResource } from \"react-request-hook\";\nimport \"./Todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo({\n  id,\n  title,\n  description,\n  dateCreated,\n  complete: initialComplete,\n  dateCompleted: initialDateCompleted\n}) {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(StateContext);\n\n  // Local state to manage the complete status and dateCompleted\n  const [complete, setComplete] = useState(initialComplete);\n  const [dateCompleted, setDateCompleted] = useState(initialDateCompleted);\n  const [toggleTodoState, toggleTodo] = useResource(({\n    id,\n    complete,\n    dateCompleted\n  }) => ({\n    url: `/todo/${id}`,\n    // Assuming you have a route to toggle the todo\n    method: \"put\",\n    headers: {\n      Authorization: `${state.user.access_token}`\n    },\n    data: {\n      complete,\n      dateCompleted\n    }\n  }));\n  const [, deleteTodo] = useResource(({\n    id\n  }) => ({\n    url: `/todo/delete`,\n    // General URL without the id\n    method: \"delete\",\n    headers: {\n      Authorization: `${state.user.access_token}`\n    },\n    data: {\n      id\n    } // Send id in the request body\n  }));\n\n  const formatDateAndTime = timestamp => {\n    const date = new Date(timestamp);\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes() < 10 ? \"0\" : \"\"}${date.getMinutes()}`;\n  };\n  const handleToggle = () => {\n    const newCompleteStatus = !complete;\n    const newDateCompleted = newCompleteStatus ? new Date().toISOString() : null;\n\n    // Update local state immediately\n    setComplete(newCompleteStatus);\n    setDateCompleted(newDateCompleted);\n    toggleTodo({\n      id,\n      complete: newCompleteStatus,\n      dateCompleted: newDateCompleted\n    });\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/api/todo/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${state.user.access_token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error in deletion\");\n      }\n\n      // Update local state or context state here\n      // For example, if you have a todos array in your state:\n      dispatch({\n        type: \"DELETE_TODO\",\n        id: id\n      });\n    } catch (error) {\n      console.error(\"Failed to delete todo:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-description\",\n      children: [\" Description: \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Created: \", formatDateAndTime(dateCreated)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Completed:\", \" \", dateCompleted ? formatDateAndTime(dateCompleted) : \"Not completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Written by \", state.user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-checkbox-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: complete,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-checkbox-label\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete(todo),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"HMSaW0IKdg+cxDcPltrzsQCUrsA=\", false, function () {\n  return [useResource, useResource];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useContext","useEffect","useState","StateContext","useResource","jsxDEV","_jsxDEV","Todo","id","title","description","dateCreated","complete","initialComplete","dateCompleted","initialDateCompleted","_s","state","dispatch","setComplete","setDateCompleted","toggleTodoState","toggleTodo","url","method","headers","Authorization","user","access_token","data","deleteTodo","formatDateAndTime","timestamp","date","Date","getMonth","getDate","getFullYear","getHours","getMinutes","handleToggle","newCompleteStatus","newDateCompleted","toISOString","handleDelete","response","fetch","ok","Error","type","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","checked","onChange","onClick","todo","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2-React/mytodolist/client/src/Todo.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { StateContext } from \"./contexts\";\nimport { useResource } from \"react-request-hook\";\nimport \"./Todo.css\";\n\nexport default function Todo({\n  id,\n  title,\n  description,\n  dateCreated,\n  complete: initialComplete,\n  dateCompleted: initialDateCompleted,\n}) {\n  const { state, dispatch } = useContext(StateContext);\n\n  // Local state to manage the complete status and dateCompleted\n  const [complete, setComplete] = useState(initialComplete);\n  const [dateCompleted, setDateCompleted] = useState(initialDateCompleted);\n\n  const [toggleTodoState, toggleTodo] = useResource(\n    ({ id, complete, dateCompleted }) => ({\n      url: `/todo/${id}`, // Assuming you have a route to toggle the todo\n      method: \"put\",\n      headers: {\n        Authorization: `${state.user.access_token}`,\n      },\n      data: { complete, dateCompleted },\n    })\n  );\n\n  const [, deleteTodo] = useResource(({ id }) => ({\n    url: `/todo/delete`, // General URL without the id\n    method: \"delete\",\n    headers: {\n      Authorization: `${state.user.access_token}`,\n    },\n    data: { id }, // Send id in the request body\n  }));\n\n  const formatDateAndTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${\n      date.getMonth() + 1\n    }/${date.getDate()}/${date.getFullYear()} ${date.getHours()}:${\n      date.getMinutes() < 10 ? \"0\" : \"\"\n    }${date.getMinutes()}`;\n  };\n\n  const handleToggle = () => {\n    const newCompleteStatus = !complete;\n    const newDateCompleted = newCompleteStatus\n      ? new Date().toISOString()\n      : null;\n\n    // Update local state immediately\n    setComplete(newCompleteStatus);\n    setDateCompleted(newDateCompleted);\n\n    toggleTodo({\n      id,\n      complete: newCompleteStatus,\n      dateCompleted: newDateCompleted,\n    });\n  };\n\n const handleDelete = async (id) => {\n   try {\n     const response = await fetch(`/api/todo/${id}`, {\n       method: \"DELETE\",\n       headers: {\n         Authorization: `Bearer ${state.user.access_token}`,\n         \"Content-Type\": \"application/json\",\n       },\n     });\n\n     if (!response.ok) {\n       throw new Error(\"Error in deletion\");\n     }\n\n     // Update local state or context state here\n     // For example, if you have a todos array in your state:\n     dispatch({ type: \"DELETE_TODO\", id: id });\n   } catch (error) {\n     console.error(\"Failed to delete todo:\", error);\n   }\n };\n\n  return (\n    <div className=\"todo-item\">\n      <div className=\"todo-title\">{title}</div>\n      <div className=\"todo-description\"> Description: {description}</div>\n      <div className=\"todo-details\">\n        <div>Created: {formatDateAndTime(dateCreated)}</div>\n        <br />\n        <div>\n          Completed:{\" \"}\n          {dateCompleted ? formatDateAndTime(dateCompleted) : \"Not completed\"}\n        </div>\n        <br />\n        <i>Written by {state.user.username}</i>\n      </div>\n      <div className=\"todo-checkbox-wrapper\">\n        <input type=\"checkbox\" checked={complete} onChange={handleToggle} />\n        <label className=\"todo-checkbox-label\">Complete</label>\n        <br />\n      </div>\n      <button onClick={handleDelete(todo)}>Delete</button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}