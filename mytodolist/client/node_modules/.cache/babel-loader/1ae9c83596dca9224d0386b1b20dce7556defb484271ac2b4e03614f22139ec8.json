{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/Register.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  dispatch\n}) {\n  _s();\n  // State to hold form data for username (email) and password\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordRepeat: \"\"\n  });\n\n  // Define the useResource hook for registration\n  const [user, register] = useResource(({\n    username,\n    password\n  }) => ({\n    url: \"http://localhost:4000/users\",\n    // Your registration endpoint\n    method: \"post\",\n    data: {\n      email: username,\n      password\n    } // Assuming your API expects an 'email' field\n  }));\n\n  // Handle the form submission\n  function handleRegister(evt) {\n    evt.preventDefault();\n    if (formData.password !== formData.passwordRepeat) {\n      console.error(\"Passwords do not match!\");\n      return;\n    }\n    // Call the register function from useResource\n    register({\n      username: formData.username,\n      password: formData.password\n    });\n  }\n\n  // Listen for changes in the registration response\n  useEffect(() => {\n    if (user && user.data) {\n      // Dispatch the REGISTER action if the registration was successful\n      dispatch({\n        type: \"REGISTER\",\n        username: user.data.email\n      }); // Adjust this according to the actual response format\n    }\n    // You can add error handling here based on `user.error`\n  }, [user, dispatch]);\n\n  // Update form data state\n  function updateFormData(field, value) {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [field]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-username\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.username,\n      onChange: e => updateFormData(\"username\", e.target.value),\n      name: \"register-username\",\n      id: \"register-username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: formData.password,\n      onChange: e => updateFormData(\"password\", e.target.value),\n      name: \"register-password\",\n      id: \"register-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register-password-repeat\",\n      children: \"Repeat Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: formData.passwordRepeat,\n      onChange: e => updateFormData(\"passwordRepeat\", e.target.value),\n      name: \"register-password-repeat\",\n      id: \"register-password-repeat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      disabled: !formData.username || !formData.password || formData.password !== formData.passwordRepeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"ccgXGQ/s+J1ZTw2H+Ma4gIr+hOI=\", false, function () {\n  return [useResource];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useEffect","useResource","jsxDEV","_jsxDEV","Register","dispatch","_s","formData","setFormData","username","password","passwordRepeat","user","register","url","method","data","email","handleRegister","evt","preventDefault","console","error","type","updateFormData","field","value","prevFormData","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","name","id","disabled","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/Register.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\n\nexport default function Register({ dispatch }) {\n  // State to hold form data for username (email) and password\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    passwordRepeat: \"\",\n  });\n\n  // Define the useResource hook for registration\n  const [user, register] = useResource(({ username, password }) => ({\n    url: \"http://localhost:4000/users\", // Your registration endpoint\n    method: \"post\",\n    data: { email: username, password }, // Assuming your API expects an 'email' field\n  }));\n\n  // Handle the form submission\n  function handleRegister(evt) {\n    evt.preventDefault();\n    if (formData.password !== formData.passwordRepeat) {\n      console.error(\"Passwords do not match!\");\n      return;\n    }\n    // Call the register function from useResource\n    register({ username: formData.username, password: formData.password });\n  }\n\n  // Listen for changes in the registration response\n  useEffect(() => {\n    if (user && user.data) {\n      // Dispatch the REGISTER action if the registration was successful\n      dispatch({ type: \"REGISTER\", username: user.data.email }); // Adjust this according to the actual response format\n    }\n    // You can add error handling here based on `user.error`\n  }, [user, dispatch]);\n\n  // Update form data state\n  function updateFormData(field, value) {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [field]: value,\n    }));\n  }\n\n  return (\n    <form onSubmit={handleRegister}>\n      <label htmlFor=\"register-username\">Email:</label>\n      <input\n        type=\"text\"\n        value={formData.username}\n        onChange={(e) => updateFormData(\"username\", e.target.value)}\n        name=\"register-username\"\n        id=\"register-username\"\n      />\n\n      <label htmlFor=\"register-password\">Password:</label>\n      <input\n        type=\"password\"\n        value={formData.password}\n        onChange={(e) => updateFormData(\"password\", e.target.value)}\n        name=\"register-password\"\n        id=\"register-password\"\n      />\n\n      <label htmlFor=\"register-password-repeat\">Repeat Password:</label>\n      <input\n        type=\"password\"\n        value={formData.passwordRepeat}\n        onChange={(e) => updateFormData(\"passwordRepeat\", e.target.value)}\n        name=\"register-password-repeat\"\n        id=\"register-password-repeat\"\n      />\n\n      <input\n        type=\"submit\"\n        value=\"Register\"\n        disabled={\n          !formData.username ||\n          !formData.password ||\n          formData.password !== formData.passwordRepeat\n        }\n      />\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}