{"ast":null,"code":"var _jsxFileName = \"/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodo({\n  user,\n  dispatch\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Define the useResource hook for POST /posts\n  const [, createPost] = useResource(({\n    title,\n    description,\n    author\n  }) => ({\n    url: \"/posts\",\n    method: \"post\",\n    data: {\n      title,\n      description,\n      dateCreated: Date.now(),\n      author,\n      complete: false\n    }\n  }));\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n  function handleCreate() {\n    if (title && user) {\n      createPost({\n        title,\n        description,\n        author: user\n      }).then(response => {\n        // Assuming the API returns the new todo item with an ID\n        if (response && response.data) {\n          dispatch({\n            type: \"CREATE_TODO\",\n            newTodo: response.data\n          });\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleCreate();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"create-title\",\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"create-title\",\n        id: \"create-title\",\n        value: title,\n        onChange: handleTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: handleDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTodo, \"MNGdsJEjUEhB8Jp6g01z2qPLUeI=\", false, function () {\n  return [useResource];\n});\n_c = CreateTodo;\nvar _c;\n$RefreshReg$(_c, \"CreateTodo\");","map":{"version":3,"names":["useState","useResource","jsxDEV","_jsxDEV","CreateTodo","user","dispatch","_s","title","setTitle","description","setDescription","createPost","author","url","method","data","dateCreated","Date","now","complete","handleTitle","evt","target","value","handleDescription","handleCreate","then","response","type","newTodo","onSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","id","onChange","_c","$RefreshReg$"],"sources":["/Users/saadmohammedkhaled/Desktop/Web_Applications/lab2/Web-Applications-Lab2/mytodolist/client/src/CreateTodo.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\n\nexport default function CreateTodo({ user, dispatch }) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  // Define the useResource hook for POST /posts\n  const [, createPost] = useResource(({ title, description, author }) => ({\n    url: \"/posts\",\n    method: \"post\",\n    data: {\n      title,\n      description,\n      dateCreated: Date.now(),\n      author,\n      complete: false,\n    },\n  }));\n\n  function handleTitle(evt) {\n    setTitle(evt.target.value);\n  }\n\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleCreate() {\n    if (title && user) {\n      createPost({ title, description, author: user }).then((response) => {\n        // Assuming the API returns the new todo item with an ID\n        if (response && response.data) {\n          dispatch({ type: \"CREATE_TODO\", newTodo: response.data });\n        }\n      });\n    }\n  }\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleCreate();\n      }}\n    >\n      <div>\n        Author: <b>{user}</b>\n      </div>\n      <div>\n        <label htmlFor=\"create-title\">Title: </label>\n        <input\n          type=\"text\"\n          name=\"create-title\"\n          id=\"create-title\"\n          value={title}\n          onChange={handleTitle}\n        />\n      </div>\n      <label>Description: </label>\n      <textarea value={description} onChange={handleDescription} />\n      <input type=\"submit\" value=\"Create\" />\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}